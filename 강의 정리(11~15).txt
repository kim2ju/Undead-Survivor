11. 타격감 있는 몬스터 처치 만들기
- 보통 앞에 I가 붙어있으면 인터페이스이다.
- Coroutine: 생명 주기와 비동기처럼 실행되는 함수
  - IEnumerator: 코루틴만의 반환형 인터페이스
  - yield: 코루틴의 반환 키워드
    - yield return null; // 1 프레임 쉬기
    - yield return new WaitForSeconds(2f); // 2초 쉬기
      - new를 계속 쓰면 좋지 않기 때문에 따로 빼준다.
  - StartCoroutine("함수") 또는 StartCoroutine(함수())으로 실행
- GetCurrentAnimatorStateInfo: 현재 상태 정보를 가져오는 함수
- 컴포넌트의 비활성화는 .enabled = false;
- rigidbody의 물리적 비활성화는 .simulated = false
- Header: 인스펙터의 속성들을 이쁘게 구분시켜주는 타이틀

12. HUD 제작하기
- 유저 인터페이스(GUI)는 스크린 공간에 배치
- RectTransform: 스크린 전용 Transform 역할 컴포넌트
- Render Mode
  - Screen-Overlay: 스크린에 그대로 얹는 형태
  - Screen-Camera: 스크린을 카메라에 맞추는 형태
  - World Space: Game Object처럼 월드 공간에 배치하는 형태
- 어느 해상도에서나 크기를 유지하는 것이 UI의 포인트 => UI Scale Mode: Scale With Screen Size
- WorldToScreenPoint: 월드 상의 오브젝트 위치를 스크린 좌표로 변환

13. 능력 업그레이드 구현
- ScriptableObject: 다양한 데이터를 저장하는 에셋
- CreateAssetMenu: 커스텀 메뉴를 생성하는 속성
- AddComponent<T>: 게임 오브젝트에 T 컴포넌트를 추가하는 함수
- BroadcastMessage: 특정 함수 호출을 모든 자식에게 방송하는 함수

14. 플레이어 무기 장착 표현하기
- 비활성화된 오브젝트는 기본적으로 GetComponent에서 제외된다. => 파라미터에 true를 넣으면 비활성화도 포함된다.
